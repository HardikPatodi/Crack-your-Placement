class Solution {
public: ListNode*findmid(ListNode*head)
    {
        ListNode*slow=head;
        ListNode*fast=head;
        while(fast!=NULL&&fast->next!=NULL)
        {
            fast=fast->next;
            if(fast->next!=NULL)
            {
                fast=fast->next;
                slow=slow->next;
            }
        }
        return slow;
    }
    ListNode*reverse(ListNode*head2)
    {
        ListNode*prev=NULL;
        ListNode*curr=head2;
        while(curr!=NULL)
        {
            ListNode*temp=curr->next;
            curr->next=prev;
            prev=curr;
            curr=temp;
        }
        return prev;
    }
    bool check(ListNode*h1,ListNode*h2)
    {
        while(h1!=NULL && h2!=NULL)
        {
            if(h1->val!=h2->val)
            {
                return false;
            }
            h1=h1->next;
            h2=h2->next;
        }
        return true;
    }
    bool isPalindrome(ListNode* head){
        ListNode*mid=findmid(head);
        ListNode*head2=mid->next;
        mid->next=NULL;
        head2=reverse(head2);
        return check(head,head2);
    }
};
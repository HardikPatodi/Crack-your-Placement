class Solution {
  public:
    // Function which returns the  root of the flattened linked list.
    Node*merge(Node*l1,Node*l2)
    {
        Node*dummy=new Node(-1);
        Node*res=dummy;
        while(l1!=NULL && l2!=NULL)
        {
            if(l1->data < l2->data)
            {
                res->bottom=l1;
                l1->next = NULL;
                res=l1;
                l1=l1->bottom;
            }
            else
            {
                res->bottom=l2;
                l2->next = NULL;
                res=l2;
                l2=l2->bottom;
            }
        }
        if(l1!=NULL)res->bottom=l1;
        else res->bottom=l2;
        if(dummy->bottom)dummy->bottom->next=NULL;
        return dummy->bottom;
    }
    Node *flatten(Node *root) {
        // Your code here
        if(root==NULL || root->next==NULL)return root;
        Node*mergenode=flatten(root->next);
        return merge(root,mergenode);
    }
};
Leetcode Question Number - 287
class Solution
{
public:
    int findDuplicate(vector<int>& nums) 
    {
    //1 aproach (swap elements):-
    //    while(nums[0]!=nums[nums[0]])
    //    {
    //        swap(nums[0],nums[nums[0]]);
    //    }
    //    return nums[0];

    //2 approach (map ):-
    // unordered_map<int,int>mp;
    // for(int i=0;i<nums.size();i++)
    // {
    //      if(mp.find(nums[i]) != mp.end())
    //      {
    //         return nums[i];
    //      }   
    //      else
    //      {
    //         mp[nums[i]]++;
    //      }
    // }
    // return 0;

    // 3rd approach
    //Binary search
    int i=1;
    int j = nums.size()-1;
    while(i<j)
    {
        int mid=i+(j-i)/2;
        int c=0;
        for(auto num:nums)
        {
            if(num<=mid)
            c++;

        }
        if(c>mid)
        {
            j=mid;
        }
        else
        i=mid+1;
    }
    return i;
    }
};
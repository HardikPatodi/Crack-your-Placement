class Solution{
  public:
  std::array<int,256>hash(string s)
  {
      std::array<int,256>hash={0};
      for(auto a:s)
      {
          hash[a]++;
      }
      return hash;
  }
    vector<vector<string> > Anagrams(vector<string>& string_list) {
    //     unordered_map<string,vector<string>>mp;
        
    //     for(auto str:string_list)
    //     {
    //         string s=str;
    //         sort(s.begin(),s.end());
    //         mp[s].push_back(str);
    //     }
        
    //     vector<vector<string>>ans;
        
    //     for(auto m:mp)
    //     {
    //         ans.push_back(m.second);
    //     }
    //     return ans;
    
    map<std :: array<int,256>,vector<string>>mp;
    for(auto str :string_list)
    {
        mp[hash(str)].push_back(str);
    }
    vector<vector<string>>ans;
    for(auto it:mp)
    {
        ans.push_back(it.second);
    }
    return ans;
    }
};